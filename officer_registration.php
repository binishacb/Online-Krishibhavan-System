<?php
session_start();
include('dbconnection.php');
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;
require './vendor/autoload.php';

function sendemail_verify($email,$rpassword)
{
    $mail = new PHPMailer(true);
    try {
        $mail->isSMTP();
        $mail->SMTPAuth = true;
        $mail->Host = 'smtp.gmail.com';
        $mail->Username = 'agrocompanion2023@gmail.com'; // Your Gmail email address
        $mail->Password = 'wwme uijt eygq xqas'; // Your Gmail password or App Password
        $mail->SMTPSecure = 'tls';
        $mail->Port = 587;

        $mail->setFrom('agrocompanion2023@gmail.com', 'Agrocompanion');
        $mail->addAddress($email);

        $mail->isHTML(true);
        $mail->Subject = 'Email from Agrocompanion';
        $officerName = $_POST['name'];
        $officerEmail = $_POST['email'];
        $autoGeneratedPassword = $rpassword;
       // $hashed_password = hashPassword($autoGeneratedPassword);
        $email_template = "
        <h2>Dear $officerName</h2>
            
        <h5>Welcome to the team! Your login details are:
        Username: $officerEmail
        Password: $autoGeneratedPassword</h5>
        <br><br>
        ";
        $mail->Body = $email_template;
        $mail->send();
     
        return true;
    } catch (Exception $e) {
        return false;
    }
}

function generateRandomPassword($length = 10) {
    $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@#$%&*';
    $password = '';
    for ($i = 0; $i < $length; $i++) {
        $password .= $characters[rand(0, strlen($characters) - 1)];
    }
    return $password;
}

function hashPassword($password) {
    // Use a secure hashing algorithm, such as bcrypt, for production use
    // For this example, I'm using MD5, but it's not recommended for actual use
    return md5($password);
}

?>
<script>
// JavaScript for email checking (Ajax) here
$(document).ready(function() {
    $('#email').on('input', function() {
        var email = $(this).val();
        if (email !== "") {
            $.ajax({
                type: "POST",
                url: "check_email.php", // The PHP file to check email existence
                data: {
                    email: email
                },
                success: function(response) {
                    if (response == 'exists') {
                        $('#emailError').text("This email already exists.");
                    } else {
                        $('#emailError').text("");
                    }
                }
            });
        } else {
            $('#emailError').text("");
        }
    });
});
</script>
<?php

if (isset($_POST['submit'])) {
    // Get form data
    $name = $_POST['name'];
    $email = $_POST['email'];
    $phone = $_POST['phone'];
    $rpassword = generateRandomPassword();
    $hashed_password = hashPassword($rpassword); // Generate and hash the password

    // Check if the email already exists in the database
    $check_email_query = "SELECT email FROM login WHERE email='$email' LIMIT 1";
    $check_email_query_run = mysqli_query($con, $check_email_query);

    if (mysqli_num_rows($check_email_query_run) > 0) {
        echo "<script>alert('Email id already exists'); window.location = 'officer_registration.php';</script>";
    } else {
        // Insert data into the 'login' table
        $insert_login_query = "INSERT INTO login(email, password, role_id) VALUES ('$email', '$hashed_password', 3)";
        $insert_login_query_run = mysqli_query($con, $insert_login_query);

        if ($insert_login_query_run) {
            // Get the 'log_id' of the newly inserted 'login' record
            $log_id = mysqli_insert_id($con);

            // Now, insert the officer data with the obtained 'log_id'
            $query_officer = "INSERT INTO `officer`(`name`, `phone_no`, `log_id`) VALUES ('$name', '$phone', '$log_id')";
            $query_officer_run = mysqli_query($con, $query_officer);

            if ($query_officer_run) {
                if (sendemail_verify($email,$rpassword)) {
                    echo "<script>alert('Email sent'); window.location = 'officer_registration.php';</script>";
                }
            } else {
                echo "<script>alert('Registration failed'); window.location = 'officer_registration.php';</script>";
            }
        } else {
            echo "<script>alert('Registration failed'); window.location = 'officer_registration.php';</script>";
        }
    }
}
/*else {
    echo "Form submission not detected";
}*/
?>

<html>

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
    /* Additional CSS styles */
    .card {
        max-width: 400px;
        margin: 0 auto;
        /* Center the card horizontally */
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        background-color: rgba(255, 255, 255, 0.8);

        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        /* Drop shadow for the form container */
    }

    .card-body {
        padding: 20px;

    }

    .form-group {
        margin-bottom: 15px;
    }

    .btn-primary {
        width: 100%;
    }

    blockquote,
    q {
        quotes: none;
    }

    blockquote:before,
    blockquote:after,
    q:before,
    q:after {
        content: '';
        content: none;
    }

    body {
        background-color: #4CAF50;
        /* Green background color */
        background: linear-gradient(45deg, #4CAF50, #FFC107);
        /* Gradient from green to orange */
    }

    /*
.registration-container {
    background-color: rgba(255, 255, 255, 0.8); /* Semi-transparent white background for the form container 
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Drop shadow for the form container 
}*/
    </style>
    <title>officer Registration</title>
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title text-center">Officer Registration</h5>
                        <form class="needs-validation" method="post" action="#" onsubmit="return validateForm()" novalidate>

                            <div class="form-group">
                                <label for="name">Name:</label>
                                <input type="text" class="form-control" id="name" name="name" placeholder="Please fill officer full name" oninput="validateName(this.value)" required>

                                <div id="name-warning" class="invalid-feedback"></div>
                                <div id="name-error" class="invalid-feedback"></div>
                            </div>

                            <div class="form-group">
                                <label for="email">Email:</label>
                                <input type="text" class="form-control" id="email" name="email" placeholder="Enter officer email id" oninput="validateEmail(this.value)" required>

                                <div id="email-warning" class="invalid-feedback"></div>
                                <div id="email-error" class="invalid-feedback"></div>
                            </div>

                            <div class="form-group">
                                <label for="phone">Phone Number:</label>
                                <input type="text" class="form-control" id="phone" name="phone" placeholder="Enter phone number" oninput="validatePhone(this.value)" required>
                                <div id="phone-warning" class="invalid-feedback"></div>
                                <div id="phone-error" class="invalid-feedback"></div>
                            </div>

                            <div class="form-group">
                                <button type="submit" name="submit" class="btn btn-primary">Submit</button>
                            </div>
                        </form>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Include Bootstrap JS (optional) -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    
    <script>
       function validateName(name) {
    const nameInput = document.getElementById('name');
    const nameWarning = document.getElementById('name-warning');
    const nameError = document.getElementById('name-error');

    if (name === '') {
        nameWarning.textContent = 'Warning: Name field is empty.';
        nameInput.classList.add('is-invalid');
        nameError.textContent = '';
        return false; // Return false to prevent form submission
    } else if (name.length < 3) {
        nameInput.classList.add('is-invalid');
        nameWarning.textContent = '';
        nameError.textContent = 'Error: Name should contain at least 3 letters.';
        return false; // Return false to prevent form submission
    } else if (!/^[a-zA-Z]+$/.test(name)) {
        nameInput.classList.add('is-invalid');
        nameWarning.textContent = '';
        nameError.textContent = 'Error: Name should not contain numbers or special characters.';
        return false; // Return false to prevent form submission
    } else if (name.length > 50) {
        nameInput.classList.add('is-invalid');
        nameWarning.textContent = '';
        nameError.textContent = 'Error: Name exceeds the maximum character limit of 50.';
        return false; // Return false to prevent form submission
    } else if (/^(.)\1+$/i.test(name)) {
        nameInput.classList.add('is-invalid');
        nameWarning.textContent = '';
        nameError.textContent = 'Error: Name should be meaningful and not consist of repeating characters.';
        return false; // Return false to prevent form submission
    }  else if (!/^[A-Z][a-zA-Z\s.]*[a-zA-Z]$/.test(name)) {
        //nameInput.classList.remove('is-invalid');
        nameInput.classList.add('is-invalid');
        nameWarning.textContent = '';
        nameError.textContent = 'Error: Invalid name format. Please use a capitalized first letter and provide your full name without hyphens or single quotes.';
        return false; // Return true if validation is successful
    } 
    
    
    else {
        nameInput.classList.remove('is-invalid');
        nameInput.classList.add('is-valid');
        nameWarning.textContent = '';
        nameError.textContent = '';
        return true; // Return true if validation is successful
    }
}


function validateEmail(email) {
    const emailInput = document.getElementById('email');
    const emailWarning = document.getElementById('email-warning');
    const emailError = document.getElementById('email-error');

    if (email === '') {
        emailWarning.textContent = 'Warning: Email field is empty.';
        emailInput.classList.add('is-invalid');
        emailError.textContent = '';
        return false; // Return false to prevent form submission
    } else {
        const emailRegex = /^[A-Za-z][A-Za-z0-9._%+-]*@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/;
        if (emailRegex.test(email)) {
            emailInput.classList.remove('is-invalid');
            emailInput.classList.add('is-valid');
            emailWarning.textContent = '';
            emailError.textContent = '';
            return true; // Return true if validation is successful
        } else {
            emailInput.classList.add('is-invalid');
            emailWarning.textContent = '';
            emailError.style.color = 'red';
            emailError.textContent = 'Error: Invalid email address';
            return false; // Return false to prevent form submission
        }
    }
}


        function validatePhone(phone) {
            const phoneRegex = /^[0-9]{10}$/;
            const phoneInput = document.getElementById('phone');
            const phoneWarning = document.getElementById('phone-warning');
            const phoneError = document.getElementById('phone-error');

            if (phone === '') {
                phoneWarning.textContent = 'Warning: Phone number field is empty.';
                phoneInput.classList.add('is-invalid');
                phoneError.textContent = '';
                return false; // Return false to prevent form submission
            }

            if (phoneRegex.test(phone)) {
                phoneInput.classList.remove('is-invalid');
                phoneInput.classList.add('is-valid');
                phoneWarning.textContent = '';
                phoneError.textContent = '';
                return true; // Return true if validation is successful
            } else {
                phoneInput.classList.add('is-invalid');
                phoneWarning.textContent = '';
                phoneError.textContent = 'Error: Invalid phone number. Please enter a 10-digit number.';
                return false; // Return false to prevent form submission
            }
        }

        function validateForm() {
            const isNameValid = validateName(document.getElementById('name').value);
            const isEmailValid = validateEmail(document.getElementById('email').value);
            const isPhoneValid = validatePhone(document.getElementById('phone').value);

            return isNameValid && isEmailValid && isPhoneValid;
        }
    </script>
</body>
